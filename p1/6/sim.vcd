$date
  Tue Sep 28 09:29:50 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module test $end
$var reg 8 ! anum[7:0] $end
$var reg 8 " bnum[7:0] $end
$var reg 8 # sum[7:0] $end
$var reg 1 $ sel $end
$var reg 1 % led $end
$scope module conecctions $end
$var reg 1 & sel $end
$var reg 8 ' anum[7:0] $end
$var reg 8 ( bnum[7:0] $end
$var reg 1 ) led $end
$var reg 8 * sum[7:0] $end
$var reg 8 + carry[7:0] $end
$var reg 8 , bneg[7:0] $end
$var reg 8 - sneg[7:0] $end
$var reg 1 . cend $end
$scope module rest0 $end
$var reg 1 / a $end
$var reg 1 0 b $end
$var reg 1 1 o $end
$upscope $end
$scope module rest1 $end
$var reg 1 2 a $end
$var reg 1 3 b $end
$var reg 1 4 o $end
$upscope $end
$scope module rest2 $end
$var reg 1 5 a $end
$var reg 1 6 b $end
$var reg 1 7 o $end
$upscope $end
$scope module rest3 $end
$var reg 1 8 a $end
$var reg 1 9 b $end
$var reg 1 : o $end
$upscope $end
$scope module rest4 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = o $end
$upscope $end
$scope module rest5 $end
$var reg 1 > a $end
$var reg 1 ? b $end
$var reg 1 @ o $end
$upscope $end
$scope module rest6 $end
$var reg 1 A a $end
$var reg 1 B b $end
$var reg 1 C o $end
$upscope $end
$scope module rest7 $end
$var reg 1 D a $end
$var reg 1 E b $end
$var reg 1 F o $end
$upscope $end
$scope module sneg0 $end
$var reg 1 G anum $end
$var reg 1 H bnum $end
$var reg 1 I cin $end
$var reg 1 J sum $end
$var reg 1 K cout $end
$var reg 1 L carrya $end
$var reg 1 M carryb $end
$var reg 1 N sumpass $end
$scope module firtsum $end
$var reg 1 O a $end
$var reg 1 P b $end
$var reg 1 Q o $end
$var reg 1 R c $end
$scope module sum $end
$var reg 1 S a $end
$var reg 1 T b $end
$var reg 1 U o $end
$upscope $end
$scope module carry $end
$var reg 1 V a $end
$var reg 1 W b $end
$var reg 1 X o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 Y a $end
$var reg 1 Z b $end
$var reg 1 [ o $end
$var reg 1 \ c $end
$scope module sum $end
$var reg 1 ] a $end
$var reg 1 ^ b $end
$var reg 1 _ o $end
$upscope $end
$scope module carry $end
$var reg 1 ` a $end
$var reg 1 a b $end
$var reg 1 b o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 c a $end
$var reg 1 d b $end
$var reg 1 e o $end
$upscope $end
$upscope $end
$scope module sneg1 $end
$var reg 1 f anum $end
$var reg 1 g bnum $end
$var reg 1 h cin $end
$var reg 1 i sum $end
$var reg 1 j cout $end
$var reg 1 k carrya $end
$var reg 1 l carryb $end
$var reg 1 m sumpass $end
$scope module firtsum $end
$var reg 1 n a $end
$var reg 1 o b $end
$var reg 1 p o $end
$var reg 1 q c $end
$scope module sum $end
$var reg 1 r a $end
$var reg 1 s b $end
$var reg 1 t o $end
$upscope $end
$scope module carry $end
$var reg 1 u a $end
$var reg 1 v b $end
$var reg 1 w o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 x a $end
$var reg 1 y b $end
$var reg 1 z o $end
$var reg 1 { c $end
$scope module sum $end
$var reg 1 | a $end
$var reg 1 } b $end
$var reg 1 !" o $end
$upscope $end
$scope module carry $end
$var reg 1 "" a $end
$var reg 1 #" b $end
$var reg 1 $" o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 %" a $end
$var reg 1 &" b $end
$var reg 1 '" o $end
$upscope $end
$upscope $end
$scope module sneg2 $end
$var reg 1 (" anum $end
$var reg 1 )" bnum $end
$var reg 1 *" cin $end
$var reg 1 +" sum $end
$var reg 1 ," cout $end
$var reg 1 -" carrya $end
$var reg 1 ." carryb $end
$var reg 1 /" sumpass $end
$scope module firtsum $end
$var reg 1 0" a $end
$var reg 1 1" b $end
$var reg 1 2" o $end
$var reg 1 3" c $end
$scope module sum $end
$var reg 1 4" a $end
$var reg 1 5" b $end
$var reg 1 6" o $end
$upscope $end
$scope module carry $end
$var reg 1 7" a $end
$var reg 1 8" b $end
$var reg 1 9" o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 :" a $end
$var reg 1 ;" b $end
$var reg 1 <" o $end
$var reg 1 =" c $end
$scope module sum $end
$var reg 1 >" a $end
$var reg 1 ?" b $end
$var reg 1 @" o $end
$upscope $end
$scope module carry $end
$var reg 1 A" a $end
$var reg 1 B" b $end
$var reg 1 C" o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 D" a $end
$var reg 1 E" b $end
$var reg 1 F" o $end
$upscope $end
$upscope $end
$scope module sneg3 $end
$var reg 1 G" anum $end
$var reg 1 H" bnum $end
$var reg 1 I" cin $end
$var reg 1 J" sum $end
$var reg 1 K" cout $end
$var reg 1 L" carrya $end
$var reg 1 M" carryb $end
$var reg 1 N" sumpass $end
$scope module firtsum $end
$var reg 1 O" a $end
$var reg 1 P" b $end
$var reg 1 Q" o $end
$var reg 1 R" c $end
$scope module sum $end
$var reg 1 S" a $end
$var reg 1 T" b $end
$var reg 1 U" o $end
$upscope $end
$scope module carry $end
$var reg 1 V" a $end
$var reg 1 W" b $end
$var reg 1 X" o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 Y" a $end
$var reg 1 Z" b $end
$var reg 1 [" o $end
$var reg 1 \" c $end
$scope module sum $end
$var reg 1 ]" a $end
$var reg 1 ^" b $end
$var reg 1 _" o $end
$upscope $end
$scope module carry $end
$var reg 1 `" a $end
$var reg 1 a" b $end
$var reg 1 b" o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 c" a $end
$var reg 1 d" b $end
$var reg 1 e" o $end
$upscope $end
$upscope $end
$scope module sneg4 $end
$var reg 1 f" anum $end
$var reg 1 g" bnum $end
$var reg 1 h" cin $end
$var reg 1 i" sum $end
$var reg 1 j" cout $end
$var reg 1 k" carrya $end
$var reg 1 l" carryb $end
$var reg 1 m" sumpass $end
$scope module firtsum $end
$var reg 1 n" a $end
$var reg 1 o" b $end
$var reg 1 p" o $end
$var reg 1 q" c $end
$scope module sum $end
$var reg 1 r" a $end
$var reg 1 s" b $end
$var reg 1 t" o $end
$upscope $end
$scope module carry $end
$var reg 1 u" a $end
$var reg 1 v" b $end
$var reg 1 w" o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 x" a $end
$var reg 1 y" b $end
$var reg 1 z" o $end
$var reg 1 {" c $end
$scope module sum $end
$var reg 1 |" a $end
$var reg 1 }" b $end
$var reg 1 !# o $end
$upscope $end
$scope module carry $end
$var reg 1 "# a $end
$var reg 1 ## b $end
$var reg 1 $# o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 %# a $end
$var reg 1 &# b $end
$var reg 1 '# o $end
$upscope $end
$upscope $end
$scope module sneg5 $end
$var reg 1 (# anum $end
$var reg 1 )# bnum $end
$var reg 1 *# cin $end
$var reg 1 +# sum $end
$var reg 1 ,# cout $end
$var reg 1 -# carrya $end
$var reg 1 .# carryb $end
$var reg 1 /# sumpass $end
$scope module firtsum $end
$var reg 1 0# a $end
$var reg 1 1# b $end
$var reg 1 2# o $end
$var reg 1 3# c $end
$scope module sum $end
$var reg 1 4# a $end
$var reg 1 5# b $end
$var reg 1 6# o $end
$upscope $end
$scope module carry $end
$var reg 1 7# a $end
$var reg 1 8# b $end
$var reg 1 9# o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 :# a $end
$var reg 1 ;# b $end
$var reg 1 <# o $end
$var reg 1 =# c $end
$scope module sum $end
$var reg 1 ># a $end
$var reg 1 ?# b $end
$var reg 1 @# o $end
$upscope $end
$scope module carry $end
$var reg 1 A# a $end
$var reg 1 B# b $end
$var reg 1 C# o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 D# a $end
$var reg 1 E# b $end
$var reg 1 F# o $end
$upscope $end
$upscope $end
$scope module sneg6 $end
$var reg 1 G# anum $end
$var reg 1 H# bnum $end
$var reg 1 I# cin $end
$var reg 1 J# sum $end
$var reg 1 K# cout $end
$var reg 1 L# carrya $end
$var reg 1 M# carryb $end
$var reg 1 N# sumpass $end
$scope module firtsum $end
$var reg 1 O# a $end
$var reg 1 P# b $end
$var reg 1 Q# o $end
$var reg 1 R# c $end
$scope module sum $end
$var reg 1 S# a $end
$var reg 1 T# b $end
$var reg 1 U# o $end
$upscope $end
$scope module carry $end
$var reg 1 V# a $end
$var reg 1 W# b $end
$var reg 1 X# o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 Y# a $end
$var reg 1 Z# b $end
$var reg 1 [# o $end
$var reg 1 \# c $end
$scope module sum $end
$var reg 1 ]# a $end
$var reg 1 ^# b $end
$var reg 1 _# o $end
$upscope $end
$scope module carry $end
$var reg 1 `# a $end
$var reg 1 a# b $end
$var reg 1 b# o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 c# a $end
$var reg 1 d# b $end
$var reg 1 e# o $end
$upscope $end
$upscope $end
$scope module sneg7 $end
$var reg 1 f# anum $end
$var reg 1 g# bnum $end
$var reg 1 h# cin $end
$var reg 1 i# sum $end
$var reg 1 j# cout $end
$var reg 1 k# carrya $end
$var reg 1 l# carryb $end
$var reg 1 m# sumpass $end
$scope module firtsum $end
$var reg 1 n# a $end
$var reg 1 o# b $end
$var reg 1 p# o $end
$var reg 1 q# c $end
$scope module sum $end
$var reg 1 r# a $end
$var reg 1 s# b $end
$var reg 1 t# o $end
$upscope $end
$scope module carry $end
$var reg 1 u# a $end
$var reg 1 v# b $end
$var reg 1 w# o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 x# a $end
$var reg 1 y# b $end
$var reg 1 z# o $end
$var reg 1 {# c $end
$scope module sum $end
$var reg 1 |# a $end
$var reg 1 }# b $end
$var reg 1 !$ o $end
$upscope $end
$scope module carry $end
$var reg 1 "$ a $end
$var reg 1 #$ b $end
$var reg 1 $$ o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 %$ a $end
$var reg 1 &$ b $end
$var reg 1 '$ o $end
$upscope $end
$upscope $end
$scope module ledh $end
$var reg 1 ($ a $end
$var reg 1 )$ b $end
$var reg 1 *$ o $end
$upscope $end
$scope module idkw $end
$var reg 1 +$ a $end
$var reg 1 ,$ b $end
$var reg 1 -$ o $end
$upscope $end
$scope module sum0 $end
$var reg 1 .$ a $end
$var reg 1 /$ b $end
$var reg 1 0$ o $end
$upscope $end
$scope module sum1 $end
$var reg 1 1$ a $end
$var reg 1 2$ b $end
$var reg 1 3$ o $end
$upscope $end
$scope module sum2 $end
$var reg 1 4$ a $end
$var reg 1 5$ b $end
$var reg 1 6$ o $end
$upscope $end
$scope module sum3 $end
$var reg 1 7$ a $end
$var reg 1 8$ b $end
$var reg 1 9$ o $end
$upscope $end
$scope module sum4 $end
$var reg 1 :$ a $end
$var reg 1 ;$ b $end
$var reg 1 <$ o $end
$upscope $end
$scope module sum5 $end
$var reg 1 =$ a $end
$var reg 1 >$ b $end
$var reg 1 ?$ o $end
$upscope $end
$scope module sum6 $end
$var reg 1 @$ a $end
$var reg 1 A$ b $end
$var reg 1 B$ o $end
$upscope $end
$scope module sum7 $end
$var reg 1 C$ a $end
$var reg 1 D$ b $end
$var reg 1 E$ o $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000011 !
b00000100 "
b00000111 #
0$
0%
0&
b00000011 '
b00000100 (
0)
b00000111 *
b00000000 +
b00000100 ,
b00000111 -
1.
0/
00
01
02
03
04
05
16
17
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
1G
0H
0I
1J
0K
0L
0M
1N
1O
0P
1Q
0R
1S
0T
1U
1V
0W
0X
0Y
1Z
1[
0\
0]
1^
1_
0`
1a
0b
0c
0d
0e
1f
0g
0h
1i
0j
0k
0l
1m
1n
0o
1p
0q
1r
0s
1t
1u
0v
0w
0x
1y
1z
0{
0|
1}
1!"
0""
1#"
0$"
0%"
0&"
0'"
0("
1)"
0*"
1+"
0,"
0-"
0."
1/"
00"
11"
12"
03"
04"
15"
16"
07"
18"
09"
0:"
1;"
1<"
0="
0>"
1?"
1@"
0A"
1B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0!$
0"$
0#$
0$$
0%$
0&$
0'$
0($
0)$
0*$
0+$
0,$
1-$
1.$
1/$
10$
11$
12$
13$
14$
15$
16$
17$
08$
09$
1:$
0;$
0<$
1=$
0>$
0?$
1@$
0A$
0B$
1C$
0D$
0E$
#20000000
b01000000 !
b01000010 "
b00000000 #
1%
b01000000 '
b01000010 (
1)
b00000000 *
b01000000 +
b01000010 ,
b10000010 -
0.
13
14
06
07
1B
1C
0G
0J
0N
0O
0Q
0S
0U
0V
0Z
0[
0^
0_
0a
0f
1g
1i
1m
0n
1o
1p
0r
1s
1t
0u
1v
1y
1z
1}
1!"
1#"
0)"
0+"
0/"
01"
02"
05"
06"
08"
0;"
0<"
0?"
0@"
0B"
1G#
1H#
0J#
1K#
1M#
0N#
1O#
1P#
0Q#
1R#
1S#
1T#
0U#
1V#
1W#
1X#
0Z#
0[#
0^#
0_#
0a#
1d#
1e#
1h#
1i#
1x#
1z#
1|#
1!$
1"$
1)$
1*$
1,$
0-$
0.$
0/$
00$
01$
12$
03$
04$
05$
06$
07$
0:$
0=$
0@$
0A$
0B$
0C$
1D$
#40000000
b10000001 !
b10000000 "
b00000000 #
1%
b10000001 '
b10000000 (
1)
b00000000 *
b10000000 +
b10000000 ,
b00000001 -
0.
03
04
0B
0C
1E
1F
1G
1J
1N
1O
1Q
1S
1U
1V
1Z
1[
1^
1_
1a
0g
0i
0m
0o
0p
0s
0t
0v
0y
0z
0}
0!"
0#"
0G#
0H#
0J#
0K#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Z#
0[#
0^#
0_#
0a#
0d#
0e#
1f#
1g#
0h#
0i#
1j#
0k#
1l#
0m#
1n#
1o#
0p#
1q#
1r#
1s#
0t#
1u#
1v#
1w#
0x#
0y#
0z#
0{#
0|#
0}#
0!$
0"$
0#$
0$$
0%$
1&$
1'$
1($
0)$
1*$
1+$
0,$
0-$
0.$
1/$
00$
01$
02$
04$
07$
0:$
0=$
0@$
0A$
0C$
0D$
#60000000
b00000011 !
b00000100 "
b11111111 #
1$
0%
1&
b00000011 '
b00000100 (
0)
b11111111 *
b00000011 +
b11111011 ,
b11111111 -
1.
1/
11
12
14
15
16
18
1:
1;
1=
1>
1@
1A
1C
1D
0E
1H
1I
1J
1K
0L
1M
0N
1P
0Q
1R
1T
0U
1W
1X
1Y
0Z
1[
0\
1]
0^
1_
1`
0a
0b
0c
1d
1e
1f
1g
1h
1i
1j
1l
0m
1n
1o
0p
1q
1r
1s
0t
1u
1v
1w
1x
0y
1z
1|
0}
1!"
1""
0#"
1&"
1'"
1*"
1+"
1:"
1<"
1>"
1@"
1A"
1H"
1J"
1N"
1P"
1Q"
1T"
1U"
1W"
1Z"
1["
1^"
1_"
1a"
1g"
1i"
1m"
1o"
1p"
1s"
1t"
1v"
1y"
1z"
1}"
1!#
1##
1)#
1+#
1/#
11#
12#
15#
16#
18#
1;#
1<#
1?#
1@#
1B#
1H#
1J#
1N#
1P#
1Q#
1T#
1U#
1W#
1Z#
1[#
1^#
1_#
1a#
0f#
1i#
0j#
0l#
1m#
0n#
1p#
0q#
0r#
1t#
0u#
0w#
1y#
1z#
1}#
1!$
1#$
0&$
0'$
0($
0*$
0+$
1-$
1.$
1/$
10$
11$
12$
13$
14$
15$
16$
17$
18$
19$
1:$
1;$
1<$
1=$
1>$
1?$
1@$
1A$
1B$
1C$
1D$
1E$
#80000000
b01000000 !
b01000010 "
b11111110 #
0%
b01000000 '
b01000010 (
0)
b11111110 *
b00000001 +
b10111101 ,
b11111110 -
1.
13
04
06
17
1B
0C
0G
0J
1K
1L
0M
1N
0O
1Q
0R
0S
1U
0V
0X
1Z
0[
1\
1^
0_
1a
1b
1c
0d
1e
0f
0g
1h
1i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
1x
0y
1z
0{
1|
0}
1!"
1""
0#"
0$"
0%"
0&"
0'"
1)"
0*"
1+"
0,"
0-"
1/"
11"
12"
15"
16"
18"
0:"
1;"
1<"
0="
0>"
1?"
1@"
0A"
1B"
0C"
0D"
0F"
0I"
1J"
0K"
0L"
0Y"
1["
0\"
0]"
1_"
0`"
0b"
0c"
0e"
0h"
1i"
0j"
0k"
0x"
1z"
0{"
0|"
1!#
0"#
0$#
0%#
0'#
0*#
1+#
0,#
0-#
0:#
1<#
0=#
0>#
1@#
0A#
0C#
0D#
0F#
1G#
0H#
0I#
1J#
0K#
0L#
0M#
1N#
1O#
0P#
1Q#
0R#
1S#
0T#
1U#
1V#
0W#
0X#
0Y#
1Z#
1[#
0\#
0]#
1^#
1_#
0`#
1a#
0b#
0c#
0d#
0e#
0h#
1i#
0j#
0k#
0x#
1z#
0{#
0|#
1!$
0"$
0$$
0%$
0'$
0($
0)$
0*$
0+$
0,$
1-$
1.$
0/$
00$
11$
12$
13$
14$
15$
16$
17$
18$
19$
1:$
1;$
1<$
1=$
1>$
1?$
1@$
1A$
1B$
1C$
1D$
1E$
#100000000
b10000001 !
b10000000 "
b00000001 #
0%
b10000001 '
b10000000 (
0)
b00000001 *
b11111111 +
b01111111 ,
b00000001 -
1.
03
14
0B
1C
1E
0F
1G
1J
0L
1M
0N
1O
0Q
1R
1S
0U
1V
1X
0Z
1[
0\
0^
1_
0a
0b
0c
1d
1g
0i
1j
1k
1m
1o
1p
1s
1t
1v
1y
0z
1{
1}
0!"
1#"
1$"
1%"
1'"
1*"
0+"
1,"
1-"
1:"
0<"
1="
1>"
0@"
1A"
1C"
1D"
1F"
1I"
0J"
1K"
1L"
1Y"
0["
1\"
1]"
0_"
1`"
1b"
1c"
1e"
1h"
0i"
1j"
1k"
1x"
0z"
1{"
1|"
0!#
1"#
1$#
1%#
1'#
1*#
0+#
1,#
1-#
1:#
0<#
1=#
1>#
0@#
1A#
1C#
1D#
1F#
0G#
1H#
1I#
0J#
1K#
1L#
1N#
0O#
1P#
1Q#
0S#
1T#
1U#
0V#
1W#
1Y#
1Z#
0[#
1\#
1]#
1^#
0_#
1`#
1a#
1b#
1c#
1e#
1f#
0g#
1h#
0i#
1j#
1k#
0l#
1m#
1n#
0o#
1p#
0q#
1r#
0s#
1t#
1u#
0v#
0w#
1x#
1y#
0z#
1{#
1|#
1}#
0!$
1"$
1#$
1$$
1%$
0&$
1'$
1($
1)$
0*$
1+$
1,$
1-$
1.$
1/$
10$
11$
02$
03$
14$
05$
06$
17$
08$
09$
1:$
0;$
0<$
1=$
0>$
0?$
1@$
0A$
0B$
1C$
0D$
0E$
#120000000
