$date
  Tue Sep 28 08:49:23 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module test $end
$var reg 4 ! anum[3:0] $end
$var reg 4 " bnum[3:0] $end
$var reg 4 # sum[3:0] $end
$var reg 1 $ sel $end
$var reg 1 % led $end
$scope module conecctions $end
$var reg 1 & sel $end
$var reg 4 ' anum[3:0] $end
$var reg 4 ( bnum[3:0] $end
$var reg 1 ) led $end
$var reg 4 * sum[3:0] $end
$var reg 4 + carry[3:0] $end
$var reg 4 , bneg[3:0] $end
$var reg 4 - sneg[3:0] $end
$var reg 1 . cend $end
$scope module rest0 $end
$var reg 1 / a $end
$var reg 1 0 b $end
$var reg 1 1 o $end
$upscope $end
$scope module rest1 $end
$var reg 1 2 a $end
$var reg 1 3 b $end
$var reg 1 4 o $end
$upscope $end
$scope module rest2 $end
$var reg 1 5 a $end
$var reg 1 6 b $end
$var reg 1 7 o $end
$upscope $end
$scope module rest3 $end
$var reg 1 8 a $end
$var reg 1 9 b $end
$var reg 1 : o $end
$upscope $end
$scope module sneg0 $end
$var reg 1 ; anum $end
$var reg 1 < bnum $end
$var reg 1 = cin $end
$var reg 1 > sum $end
$var reg 1 ? cout $end
$var reg 1 @ carrya $end
$var reg 1 A carryb $end
$var reg 1 B sumpass $end
$scope module firtsum $end
$var reg 1 C a $end
$var reg 1 D b $end
$var reg 1 E o $end
$var reg 1 F c $end
$scope module sum $end
$var reg 1 G a $end
$var reg 1 H b $end
$var reg 1 I o $end
$upscope $end
$scope module carry $end
$var reg 1 J a $end
$var reg 1 K b $end
$var reg 1 L o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 M a $end
$var reg 1 N b $end
$var reg 1 O o $end
$var reg 1 P c $end
$scope module sum $end
$var reg 1 Q a $end
$var reg 1 R b $end
$var reg 1 S o $end
$upscope $end
$scope module carry $end
$var reg 1 T a $end
$var reg 1 U b $end
$var reg 1 V o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 W a $end
$var reg 1 X b $end
$var reg 1 Y o $end
$upscope $end
$upscope $end
$scope module sneg1 $end
$var reg 1 Z anum $end
$var reg 1 [ bnum $end
$var reg 1 \ cin $end
$var reg 1 ] sum $end
$var reg 1 ^ cout $end
$var reg 1 _ carrya $end
$var reg 1 ` carryb $end
$var reg 1 a sumpass $end
$scope module firtsum $end
$var reg 1 b a $end
$var reg 1 c b $end
$var reg 1 d o $end
$var reg 1 e c $end
$scope module sum $end
$var reg 1 f a $end
$var reg 1 g b $end
$var reg 1 h o $end
$upscope $end
$scope module carry $end
$var reg 1 i a $end
$var reg 1 j b $end
$var reg 1 k o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 l a $end
$var reg 1 m b $end
$var reg 1 n o $end
$var reg 1 o c $end
$scope module sum $end
$var reg 1 p a $end
$var reg 1 q b $end
$var reg 1 r o $end
$upscope $end
$scope module carry $end
$var reg 1 s a $end
$var reg 1 t b $end
$var reg 1 u o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 v a $end
$var reg 1 w b $end
$var reg 1 x o $end
$upscope $end
$upscope $end
$scope module sneg2 $end
$var reg 1 y anum $end
$var reg 1 z bnum $end
$var reg 1 { cin $end
$var reg 1 | sum $end
$var reg 1 } cout $end
$var reg 1 !" carrya $end
$var reg 1 "" carryb $end
$var reg 1 #" sumpass $end
$scope module firtsum $end
$var reg 1 $" a $end
$var reg 1 %" b $end
$var reg 1 &" o $end
$var reg 1 '" c $end
$scope module sum $end
$var reg 1 (" a $end
$var reg 1 )" b $end
$var reg 1 *" o $end
$upscope $end
$scope module carry $end
$var reg 1 +" a $end
$var reg 1 ," b $end
$var reg 1 -" o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 ." a $end
$var reg 1 /" b $end
$var reg 1 0" o $end
$var reg 1 1" c $end
$scope module sum $end
$var reg 1 2" a $end
$var reg 1 3" b $end
$var reg 1 4" o $end
$upscope $end
$scope module carry $end
$var reg 1 5" a $end
$var reg 1 6" b $end
$var reg 1 7" o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 8" a $end
$var reg 1 9" b $end
$var reg 1 :" o $end
$upscope $end
$upscope $end
$scope module sneg3 $end
$var reg 1 ;" anum $end
$var reg 1 <" bnum $end
$var reg 1 =" cin $end
$var reg 1 >" sum $end
$var reg 1 ?" cout $end
$var reg 1 @" carrya $end
$var reg 1 A" carryb $end
$var reg 1 B" sumpass $end
$scope module firtsum $end
$var reg 1 C" a $end
$var reg 1 D" b $end
$var reg 1 E" o $end
$var reg 1 F" c $end
$scope module sum $end
$var reg 1 G" a $end
$var reg 1 H" b $end
$var reg 1 I" o $end
$upscope $end
$scope module carry $end
$var reg 1 J" a $end
$var reg 1 K" b $end
$var reg 1 L" o $end
$upscope $end
$upscope $end
$scope module secondsum $end
$var reg 1 M" a $end
$var reg 1 N" b $end
$var reg 1 O" o $end
$var reg 1 P" c $end
$scope module sum $end
$var reg 1 Q" a $end
$var reg 1 R" b $end
$var reg 1 S" o $end
$upscope $end
$scope module carry $end
$var reg 1 T" a $end
$var reg 1 U" b $end
$var reg 1 V" o $end
$upscope $end
$upscope $end
$scope module handlec $end
$var reg 1 W" a $end
$var reg 1 X" b $end
$var reg 1 Y" o $end
$upscope $end
$upscope $end
$scope module ledh $end
$var reg 1 Z" a $end
$var reg 1 [" b $end
$var reg 1 \" o $end
$upscope $end
$scope module idkw $end
$var reg 1 ]" a $end
$var reg 1 ^" b $end
$var reg 1 _" o $end
$upscope $end
$scope module sum0 $end
$var reg 1 `" a $end
$var reg 1 a" b $end
$var reg 1 b" o $end
$upscope $end
$scope module sum1 $end
$var reg 1 c" a $end
$var reg 1 d" b $end
$var reg 1 e" o $end
$upscope $end
$scope module sum2 $end
$var reg 1 f" a $end
$var reg 1 g" b $end
$var reg 1 h" o $end
$upscope $end
$scope module sum3 $end
$var reg 1 i" a $end
$var reg 1 j" b $end
$var reg 1 k" o $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0011 !
b0100 "
b0111 #
0$
0%
0&
b0011 '
b0100 (
0)
b0111 *
b0000 +
b0100 ,
b0111 -
1.
0/
00
01
02
03
04
05
16
17
08
09
0:
1;
0<
0=
1>
0?
0@
0A
1B
1C
0D
1E
0F
1G
0H
1I
1J
0K
0L
0M
1N
1O
0P
0Q
1R
1S
0T
1U
0V
0W
0X
0Y
1Z
0[
0\
1]
0^
0_
0`
1a
1b
0c
1d
0e
1f
0g
1h
1i
0j
0k
0l
1m
1n
0o
0p
1q
1r
0s
1t
0u
0v
0w
0x
0y
1z
0{
1|
0}
0!"
0""
1#"
0$"
1%"
1&"
0'"
0("
1)"
1*"
0+"
1,"
0-"
0."
1/"
10"
01"
02"
13"
14"
05"
16"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
1_"
1`"
1a"
1b"
1c"
1d"
1e"
1f"
1g"
1h"
1i"
0j"
0k"
#20000000
b0100 !
b0101 "
b0000 #
1%
b0100 '
b0101 (
1)
b0000 *
b0100 +
b0101 ,
b1001 -
0.
10
11
0;
1<
1>
1B
0C
1D
1E
0G
1H
1I
0J
1K
1N
1O
1R
1S
1U
0Z
0]
0a
0b
0d
0f
0h
0i
0m
0n
0q
0r
0t
1y
0|
1}
1""
0#"
1$"
0&"
1'"
1("
0*"
1+"
1-"
0/"
00"
03"
04"
06"
19"
1:"
1="
1>"
1M"
1O"
1Q"
1S"
1T"
1["
1\"
1^"
0_"
0`"
1a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
1j"
#40000000
b1100 !
b1001 "
b1100 '
b1001 (
b1000 +
b1001 ,
b0101 -
06
07
19
1:
0z
1|
0}
0""
1#"
0%"
1&"
0'"
0)"
1*"
0,"
0-"
1/"
10"
13"
14"
16"
09"
0:"
1;"
1<"
0="
0>"
1?"
0@"
1A"
0B"
1C"
1D"
0E"
1F"
1G"
1H"
0I"
1J"
1K"
1L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
1X"
1Y"
1Z"
0["
1]"
0^"
1g"
0j"
#60000000
b0011 !
b0100 "
b1111 #
1$
0%
1&
b0011 '
b0100 (
0)
b1111 *
b0011 +
b1011 ,
b1111 -
1.
1/
00
12
14
15
16
18
09
1;
1=
1>
1?
0@
1A
0B
1C
0E
1F
1G
0I
1J
1L
1M
0N
1O
0P
1Q
0R
1S
1T
0U
0V
0W
1X
1Y
1Z
1[
1\
1]
1^
1`
0a
1b
1c
0d
1e
1f
1g
0h
1i
1j
1k
1l
0m
1n
1p
0q
1r
1s
0t
1w
1x
0y
1{
1|
0#"
0$"
0&"
0("
0*"
0+"
1."
0/"
10"
12"
03"
14"
15"
06"
0;"
1>"
0?"
0A"
1B"
0C"
1E"
0F"
0G"
1I"
0J"
0L"
1N"
1O"
1R"
1S"
1U"
0X"
0Y"
0Z"
0\"
0]"
1_"
1`"
1a"
1b"
1c"
1d"
1e"
1f"
1g"
1h"
1i"
1j"
1k"
#80000000
b0100 !
b0101 "
b1111 #
0%
b0100 '
b0101 (
0)
b1111 *
b0000 +
b1010 ,
b1111 -
1.
10
01
0;
0<
1>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0N
1O
0P
0R
1S
0U
0V
0W
0X
0Y
0Z
0\
1]
0^
0_
0`
1a
0b
1d
0e
0f
1h
0i
0k
0l
1m
1n
0o
0p
1q
1r
0s
1t
0u
0v
0w
0x
1y
0{
1|
0}
0!"
1#"
1$"
1&"
1("
1*"
1+"
0."
1/"
10"
01"
02"
13"
14"
05"
16"
07"
08"
0:"
0="
1>"
0?"
0@"
0M"
1O"
0P"
0Q"
1S"
0T"
0V"
0W"
0Y"
0Z"
0["
0\"
0]"
0^"
1_"
1`"
1a"
1b"
1c"
1d"
1e"
1f"
1g"
1h"
1i"
1j"
1k"
#100000000
b1100 !
b1001 "
b0011 #
0%
b1100 '
b1001 (
0)
b0011 *
b1100 +
b0110 ,
b0011 -
1.
06
17
19
0:
1z
0|
1}
1""
0#"
1%"
0&"
1'"
1)"
0*"
1,"
1-"
0/"
00"
03"
04"
06"
19"
1:"
1;"
0<"
1="
0>"
1?"
1@"
0A"
1B"
1C"
0D"
1E"
0F"
1G"
0H"
1I"
1J"
0K"
0L"
1M"
1N"
0O"
1P"
1Q"
1R"
0S"
1T"
1U"
1V"
1W"
0X"
1Y"
1Z"
1["
0\"
1]"
1^"
1_"
1`"
1b"
1c"
1e"
1f"
0g"
0h"
1i"
0j"
0k"
#120000000
